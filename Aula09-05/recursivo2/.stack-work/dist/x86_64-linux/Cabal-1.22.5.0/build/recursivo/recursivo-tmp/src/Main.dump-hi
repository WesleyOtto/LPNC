
==================== FINAL INTERFACE ====================
2016-09-18 22:18:16.92386 UTC

interface main@main:Main 7103
  interface hash: 9f04b38f501eab76d9d8e380f9e5d088
  ABI hash: 94fa4fbd47613f6866370c47a6f33323
  export-list hash: 530f0032c006c9f34a74244876cfb4e1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 10b492828cadfcb19cb0ded833846c96
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.allOdd
  Main.alternate
  Main.andMap
  Main.append
  Main.count
  Main.filter'
  Main.firstOccurrence
  Main.length'
  Main.listRef
  Main.listTail
  Main.longest
  Main.main
  Main.map'
  Main.max'
  Main.member
  Main.merge
  Main.odds
  Main.pairlis
  Main.posPlus
  Main.removeFirst
  Main.removeKFirst
  Main.remq
  Main.some
  Main.sorted
  Main.stammer
  Main.substitute
  Main.sum'
  Main.twice
  Main.unique
  Main.unique'
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type 371e90fe753f08ddedf0d2657a9ef5c4
726672c17e5e1ba5d56c76890efc31cd
  $wlength' :: [a] -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
35e30d0d3f74a85c5c4cc414dc2c93be
  $wlistRef :: [a] -> GHC.Prim.Int# -> a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0] -}
338d36802b1293a7cec41a350e00904e
  allOdd :: GHC.Real.Integral a => [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(U,A,A,C(C1(U)),A,A,A,A,A)><S,1*U> -}
8d08d6d93c51a10f0851704bee77627c
  alternate :: [a] -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
e8fef804ec194165709fbbe105bbd9e1
  andMap :: (a -> GHC.Types.Bool) -> [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
fab8cef104e5ec42140ea0896a32e8c0
  append :: [a] -> [a] -> [a]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ @ a ds :: [a] ds1 :: [a] ->
                 case ds of wild {
                   []
                   -> case ds1 of wild1 {
                        [] -> GHC.Types.[] @ a : ipv ipv1 -> Main.append1 @ a }
                   : x xs
                   -> case ds1 of wild1 {
                        [] -> Main.append1 @ a
                        : y ys -> GHC.Types.: @ a x (GHC.Base.++ @ a xs wild1) } }) -}
5f2e1112a35ffade9a3c30916d888e11
  append1 :: [a]
  {- Strictness: b -}
d25aed3bb3d253c19ee3d49b54ee4790
  count :: GHC.Classes.Eq a => a -> [a] -> GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A)><L,U><S,1*U> -}
efab5d0ca7093fbcb8b11a325b86376e
  filter' :: (a -> GHC.Types.Bool) -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
0b7a944dba596b2c0a8fdc55316a49f8
  firstOccurrence :: GHC.Classes.Eq a => [a] -> [a]
  {- Arity: 2, Strictness: <L,U(C(C1(U)),A)><S,1*U> -}
089f96955746f2d3613fa62f688a336c
  length' :: [a] -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a w :: [a] ->
                 case Main.$wlength' @ a w of ww { DEFAULT -> GHC.Types.I# ww }) -}
b7b16bba74a643cfde6b281095eadc3a
  listRef :: [a] -> GHC.Types.Int -> a
  {- Arity: 2, Strictness: <S,1*U><S(S),1*U(1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a w :: [a] w1 :: GHC.Types.Int ->
                 case w1 of ww { GHC.Types.I# ww1 -> Main.$wlistRef @ a w ww1 }) -}
56abc45378f3971f04f79df3e3087b50
  listTail :: [a] -> GHC.Types.Int -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(1*U)> -}
41d2fe4cfb39eaba001c9e989f9b96ca
  longest :: [[a]] -> [a]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ds :: [[a]] ->
                 case ds of wild {
                   [] -> Main.longest1 @ a
                   : ds1 ds2
                   -> case ds1 of wild1 {
                        []
                        -> case ds2 of wild2 {
                             [] -> GHC.Types.[] @ a : ipv ipv1 -> Main.longest1 @ a }
                        : ipv ipv1 -> Main.longest1 @ a } }) -}
31eb4d822a39ff7782d9a2bfa7c4c4f9
  longest1 :: [a]
  {- Strictness: b -}
7f8e0ecc6e111adcd838c7195b720f86
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
ec670e0ef1b6584cab7ac5c6171c9319
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Base.build
                      @ GHC.Types.Char
                      (\ @ b -> GHC.CString.unpackFoldrCString# @ b "blah"#))
                   GHC.Types.True
                   eta) -}
9f450b0978e2eb3440ccce7860957321
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
dd71c4147d28f932339ee6246ebe8e4a
  map' :: (a -> b) -> [a] -> [b]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
ee7dd853b2b335f9db7b22a0666235a2
  max' :: GHC.Classes.Ord a => [a] -> a
  {- Arity: 2, Strictness: <L,U(A,A,A,A,C(C1(U)),A,A,A)><S,1*U> -}
ca8e2b84e9f239cef6f9d730e3a34544
  member :: GHC.Classes.Eq a => a -> [a] -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U><S,1*U> -}
4efca0d4665e07c04f2c0df35eb074d6
  merge :: GHC.Classes.Ord a => [a] -> [a] -> [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,C(C1(U)),A,A,A)><S,U><S,U> -}
ce416f5bee15988f511bfa04e0fd97ea
  odds :: [a] -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3157e0e9a9281c37c513caa067c79610
  pairlis :: [a] -> [a] -> [[a]]
  {- Strictness: b,
     Unfolding: InlineRule (0, True, True)
                (\ @ a -> GHC.Err.undefined @ ([a] -> [a] -> [[a]])) -}
671e7284848027c0c39e7b4240939b24
  posPlus :: [GHC.Types.Int] -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [GHC.Types.Int] ->
                 case ds of wild {
                   [] -> GHC.Types.[] @ GHC.Types.Int
                   : ipv ipv1 -> Main.posPlus1 }) -}
e63156f0ecd8b3314572c9c6df9f8986
  posPlus1 :: [GHC.Types.Int]
  {- Strictness: b -}
4f8c3302c5eb70ad13998e52432c503e
  removeFirst :: GHC.Classes.Eq a => a -> [a] -> [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U><S,1*U> -}
40ab2cf0d16051cbedcb95543b7c418c
  removeKFirst ::
    GHC.Classes.Eq a => a -> GHC.Types.Int -> [a] -> [a]
  {- Arity: 1, Strictness: <B,A>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a $dEq :: GHC.Classes.Eq a ->
                 GHC.Err.undefined @ (a -> GHC.Types.Int -> [a] -> [a])) -}
c24bf77a9442f3d5e187d769a4210d6a
  remq :: GHC.Classes.Eq a => a -> [a] -> [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U><S,1*U> -}
ff7e4ab5cd3378086e34cbff31186370
  some :: (a -> GHC.Types.Bool) -> [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
15c61512f1155bd3f6e30529d8f1704a
  sorted :: GHC.Classes.Ord a => [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(C1(U)),A,A,A,A)><S,1*U> -}
ade28c431b3eac89e9228dbf5378f594
  stammer :: [a] -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
b0dee80ed735915d6d8adcd386bbad51
  substitute :: GHC.Classes.Eq a => a -> a -> [a] -> [a]
  {- Arity: 1, Strictness: <B,A>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a $dEq :: GHC.Classes.Eq a ->
                 GHC.Err.undefined @ (a -> a -> [a] -> [a])) -}
55430c1c24bbfc0d8909eaebeff3c6b3
  sum' :: GHC.Num.Num a => [a] -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,U(C(C1(U)),A,A,A,A,A,C(U))><S,1*U> -}
428519af7c525807bad103df9ac60bdc
  twice :: GHC.Num.Num a => [a] -> [a]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,C(C1(U)),A,A,A,C(U))><S,1*U> -}
a82183db5b86091065323e490a25b028
  unique :: GHC.Classes.Eq a => [a] -> [a]
  {- Arity: 2, Strictness: <L,U(C(C1(U)),A)><S,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ a $dEq :: GHC.Classes.Eq a ds :: [a] ->
                 case ds of wild {
                   [] -> Main.unique1 @ a
                   : x xs -> GHC.Types.: @ a x (Main.unique' @ a $dEq xs x) }) -}
c43e0ce79a7f85a3657a4981f0b33c89
  unique' :: GHC.Classes.Eq a => [a] -> a -> [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><L,U> -}
98043a76e2b28c6c0662cef41dfdf3db
  unique1 :: [a]
  {- Strictness: b -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

